// <auto-generated />
using LandmarkRemarkService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LandmarkRemarkService.Migrations
{
    [DbContext(typeof(LandmarkDbContext))]
    [Migration("20191111035334_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("LandmarkRemarkService.Database.MapLandmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double>("Lng")
                        .HasColumnType("REAL");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MapLandmark");
                });

            modelBuilder.Entity("LandmarkRemarkService.Database.UserInfo", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserContextInfo");

                    b.HasData(
                        new
                        {
                            UserId = "guest1",
                            Email = "testUser1@testuser1.com",
                            Name = "Test User1",
                            Password = "1"
                        },
                        new
                        {
                            UserId = "guest2",
                            Email = "testUser2@testuser2.com",
                            Name = "Test User2",
                            Password = "2"
                        });
                });

            modelBuilder.Entity("LandmarkRemarkService.Database.MapLandmark", b =>
                {
                    b.HasOne("LandmarkRemarkService.Database.UserInfo", null)
                        .WithMany("MapLandmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
